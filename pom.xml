<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<name>quickstart-spring-boot-crud</name>
	<description>Quickstart project for Spring Boot</description>
	<groupId>com.project.service</groupId>
	<artifactId>quickstart-spring-boot-crud</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<developers>
		<developer>
			<id>alisonbuss</id>
			<name>Alison Buss</name>
			<email>alisonbuss.dev@gmail.com</email>
			<url>https://github.com/alisonbuss/</url>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>MIT</name>
			<url>https://opensource.org/licenses/MIT</url>
		</license>
	</licenses>

	<properties>
		<java.version>17</java.version>
	</properties>

	<dependencies>

		<!-- Dependencies Sprint Boot -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Othes -->

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- For Tests -->

		<!--
			Dependencies:
			If you use the spring-boot-starter-test ‘Starter’ (in the test scope),
			you will find the following provided libraries:
				- JUnit — The de-facto standard for unit testing Java applications.
				- Spring Test & Spring Boot Test — Utilities and integration test support for Spring Boot applications.
				- AssertJ — A fluent assertion library.
				- Hamcrest — A library of matcher objects (also known as constraints or predicates).
				- Mockito — A Java mocking framework.
				- JSONassert — An assertion library for JSON.
				- JsonPath — XPath for JSON.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Making the output of Maven tests more elegant!!! \O/ -->
			<!-- @Author: Fabrício Yamamoto -->
			<!-- @Project: https://github.com/fabriciorby/maven-surefire-junit5-tree-reporter -->
			<!-- @Font: https://medium.com/wearewaes/my-journey-to-a-clear-test-output-in-maven-df82fe272249 -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.0</version>
				<dependencies>
					<dependency>
						<groupId>me.fabriciorby</groupId>
						<artifactId>maven-surefire-junit5-tree-reporter</artifactId>
						<version>1.2.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<reportFormat>plain</reportFormat>
					<consoleOutputReporter>
						<disable>true</disable>
					</consoleOutputReporter>
					<statelessTestsetInfoReporter
						implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
						<theme>UNICODE</theme>
					</statelessTestsetInfoReporter>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
